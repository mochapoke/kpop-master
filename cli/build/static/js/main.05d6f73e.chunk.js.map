{"version":3,"sources":["constants/theme.js","components/LinkButton/LinkButton.jsx","components/Snippet/Snippet.jsx","components/Card/Card.jsx","components/Center/Center.jsx","components/CardContainer/CardContainer.jsx","components/RoundContainer/RoundContainer.jsx","constants/image/outroImage/level.js","constants/image/outroImage/level0.svg","constants/image/outroImage/level1.svg","constants/image/outroImage/level2.svg","constants/image/outroImage/level3.svg","constants/image/outroImage/level4.svg","constants/image/outroImage/level5.svg","constants/image/outroImage/error.svg","components/Row/Row.jsx","components/GameTitle/GameTitle.jsx","context/GamEndContext/GameEndContext.jsx","context/GameResultContext/GameResultContext.jsx","pages/LandingPage/LandingPage.jsx","constants/image/checkImg.svg","pages/GameLayout/Section/Player/Player.jsx","pages/GameLayout/Section/Session/Session.jsx","pages/GameLayout/Section/LogList/LogList.jsx","pages/GameLayout/Section/Hint/Hint.jsx","pages/GameLayout/Section/ShowHintOrAnswer/ShowHintOrAnswer.jsx","components/InputContainer/InputContainer.jsx","components/Card/CleanCard.jsx","pages/GameLayout/Section/AnswerCard/AnswerCard.jsx","constants/sounds/correct.mp3","constants/sounds/wrong1.mp3","pages/GameLayout/GameLayout.jsx","pages/OutroPage/Section/ShareMyRecord/ShareMyRecord.jsx","pages/OutroPage/Section/PreviousRecord/PreviousRecord.jsx","pages/OutroPage/Section/SavingWrapper/SavingWrapper.jsx","pages/OutroPage/Section/SavingInputcontainer/SavingInputcontainer.jsx","pages/OutroPage/Section/SavingMyRecord/SavingMyRecord.jsx","pages/OutroPage/Section/Accordion/Accordion.jsx","pages/OutroPage/Section/UsersAverageData/UserAverageData.jsx","pages/OutroPage/Section/RankersTable/RankersTable.jsx","pages/OutroPage/Section/RankersTableTitle/RankersTableTitle.jsx","pages/OutroPage/Section/RankersRecord/RankersRecord.jsx","pages/OutroPage/Section/CurrentRecord/CurrentRecord.jsx","pages/OutroPage/Section/Description/Description.jsx","pages/OutroPage/Section/Spinner/Spinner.jsx","pages/OutroPage/Section/PageWrapper/PageWrapper.jsx","pages/OutroPage/OutroPage.jsx","data/blackpink.js","pages/Start/Start.jsx","pages/NavBar/RightMenu.jsx","pages/NavBar/Burger.jsx","pages/NavBar/NavBar.jsx","pages/About/EmailForm/EmailForm.jsx","pages/About/About.jsx","pages/RankPage/Section/RankingTable/RankingTable.jsx","pages/RankPage/RankPage.jsx","App.js","index.js"],"names":["COLORS","primary","primaryDark","primaryMiddle","primaryLight","secondary","secondaryDark","grayMiddle","grayDark","grayDeepDark","textBlack","textDark","textMid","textWhiteMid","FONT","korean","english","englishTitleCurv","englishButton","SIZES","radiusSmall","radiusBig","gameLayoutWidth","gameLayoutMediumWidth","tabletWidth","laptopWidth","WIDTH","SCREEN","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","LinkContainer","styled","Link","outro","LinkButton","children","links","otherprops","to","Container","div","tips","Snippet","otherProps","primaryShaodw","Header","Content","Card","alert","title","Center","landing","inGame","bgcolor","CardContainer","RoundContainer","main","levelImage","zero","one","two","three","four","five","none","Row","landingStyles","css","aboutStyles","TitleContainer","props","about","TitleWrapper","GameEndContext","createContext","GameEndProvider","useState","isGameEnd","setIsGameEnd","Provider","value","GameResultContext","GameResultProvider","gameResult","setGameResult","LandingPage","useContext","useEffect","GameTitle","src","alt","id","style","position","left","paddingTop","Wrapper","Player","url","Fragment","playing","SessionBox","Session","map","item","className","result","ul","Log","li","LogList","giveAnswers","filter","answer","idx","Hint","trackName","givenHints","setGivenHints","length","englishRegex","test","englishHint","getKoreanInitials","string","split","char","index","charCodeAt","String","fromCharCode","join","hints","filteredString","replace","toLowerCase","hintString","Array","fill","hintsRemainig","i","Math","floor","random","charAt","TextContainer","Title","HintContainer","hint","showHints","size","ShowHintOrAnswer","timeOver","InputContainer","hoverStyle","borderAndShadow","inGameCardStyle","savingCardStyle","rankCardStyle","mailCardStyle","CleanCard","rank","mail","savingRecord","CleanCardContainer","AnswerCard","GameLayout","trackList","inputValue","setInputValue","givenAnswersList","setGivenAnswersList","currentRound","setCurrentRound","setUrl","setShowHints","setTimeOver","Date","now","startTime","setStartTime","focusedInput","useRef","useSound","correctSfx","volume","playCorrect","wrongSfx","playWrong","current","focus","giveHints","setTimeout","timer","setOver","goNextRound","clearTimeout","answerResult","newResult","toString","substr","roundIndex","responseTime","checkImg","onSubmit","event","preventDefault","regex","givenAnswer","correct","alterCorrect","alterTrackName","isCorrect","placeholder","type","onChange","target","ref","disabled","ShareTitle","h2","Highlight","span","ShareList","ShareMyRecord","Em","PreviousRecord","averageResponseTime","existingUserName","setExistingUserName","existingUserRecord","setExistingUserRecord","userName","localStorage","getItem","uploadRecordToDB","previousRecord","compareRecord","uploadRecordToLocal","user","correctAnswers","game","song","wrongAnswers","userData","record","correctTrackName","wrongTrackName","axios","post","currentRecord","setItem","SavingWrapper","SavingInputcontainer","form","SavingMyRecord","name","setName","alreadySavedName","setAlreadySavedName","isSaving","setIsSaving","saved","minLength","maxLength","autoComplete","required","button","Accordion","content","substance","isActivate","setIsActivate","tableHeight","setTableHeight","onClick","scrollHeight","height","UsersAverageDataContainer","UsersData","userAverageData","userRecords","reduce","previous","toFixed","prev","curr","TableContainer","table","RankersTable","myRecord","quantityToShow","userRecord","_id","UserAverageData","Titlecontainer","MyTier","RankersTableTitle","userRankList","percentage","setPercentage","tier","setTier","number","RankersRecord","setexistingUserName","Tablehead","th","TableContext","td","isWorng","TitleList","CurrentRecord","quantityOfCorrect","setquantityOfCorrect","quantityOfWrong","setQuantitiyOfWrong","wrong","Descript","Description","myLevel","setMyLevel","width","Spinner","PageWrapper","ContentWrapper","OutroPage","useWindowSize","setUserRankList","isLoading","setIsLoading","get","then","res","data","success","userRecordList","currrent","gravity","recycle","numberOfPieces","blackpinkData","artistName","album","Start","sort","slice","StyledLink","open","RightMenu","StyledBurger","Burger","setOpen","tabIndex","e","onBlur","onFocus","console","log","Nav","NavBar","Form","Input","input","message","userInfo","userMail","Label","label","firstRow","SubmitButton","ContactUs","emailjs","sendForm","text","error","reset","require","as","bottom","About","href","RankingTable","RankPage","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05d6f73e.chunk.js","sourcesContent":["export const COLORS = {\r\n  primary: '#6C63FF',\r\n  primaryDark: '#4F53C5',\r\n  primaryMiddle: '#868BFF',\r\n  primaryLight: '#E1E3FE',\r\n  secondary: '#FFEBB5',\r\n  secondaryDark: '#FFD978',\r\n  grayMiddle: '#E5E5E5',\r\n  grayDark: '#CBCBCB',\r\n  grayDeepDark: '#6d7274',\r\n  textBlack: '#343435',\r\n  textDark: '#383838',\r\n  textMid: '#636e72',\r\n  textWhiteMid: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nexport const FONT = {\r\n  korean: 'Nanum Gothic',\r\n  english: 'Roboto',\r\n  englishTitleCurv: `'Fredoka One', cursive`,\r\n  englishButton: `'Josefin Sans', sans-serif;`,\r\n};\r\n\r\nexport const SIZES = {\r\n  radiusSmall: '15px',\r\n  radiusBig: '30px',\r\n  gameLayoutWidth: '500px',\r\n  gameLayoutMediumWidth: '400px',\r\n  tabletWidth: '600px',\r\n  laptopWidth: '916px',\r\n};\r\n\r\nexport const WIDTH = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nexport const SCREEN = {\r\n  mobileS: `(min-width: ${WIDTH.mobileS})`,\r\n  mobileM: `(min-width: ${WIDTH.mobileM})`,\r\n  mobileL: `(min-width: ${WIDTH.mobileL})`,\r\n  tablet: `(min-width: ${WIDTH.tablet})`,\r\n  laptop: `(min-width: ${WIDTH.laptop})`,\r\n  laptopL: `(min-width: ${WIDTH.laptopL})`,\r\n  desktop: `(min-width: ${WIDTH.desktop})`,\r\n  desktopL: `(min-width: ${WIDTH.desktop})`,\r\n};\r\n\r\nconst theme = { COLORS, FONT, SIZES, SCREEN };\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { COLORS, FONT, SCREEN } from '../../constants/theme';\r\n\r\nconst LinkContainer = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 0.75em 2.7em;\r\n  border-radius: 100px;\r\n  margin: 1rem 0;\r\n\r\n  background: linear-gradient(\r\n    20deg,\r\n    #ced0ff 0%,\r\n    ${COLORS.primaryMiddle} 40%,\r\n    ${COLORS.primaryDark} 100%\r\n  );\r\n\r\n  color: white;\r\n  font-family: ${FONT.englishButton};\r\n  font-style: italic;\r\n  font-weight: 700;\r\n  font-size: 1.5rem;\r\n  letter-spacing: 3px;\r\n  text-transform: capitalize;\r\n  text-decoration: none;\r\n  transition: width 1s ease;\r\n\r\n  :hover {\r\n    background: ${COLORS.primaryDark};\r\n    color: white;\r\n  }\r\n\r\n  &.secondary {\r\n    font-size: 1.2rem;\r\n    color: ${COLORS.primaryDark};\r\n\r\n    background: linear-gradient(\r\n      20deg,\r\n      #fff3d6 0%,\r\n      ${COLORS.secondaryDark} 100%\r\n    );\r\n\r\n    :hover {\r\n      background: ${COLORS.secondaryDark};\r\n    }\r\n\r\n    @media ${SCREEN.tablet} {\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    font-size: 2rem;\r\n    align-self: ${({ outro }) => (outro ? 'center' : 'flex-start)')};\r\n    margin: 0 0 2rem 0;\r\n  }\r\n`;\r\n\r\nconst LinkButton = ({ children, links, ...otherprops }) => {\r\n  return (\r\n    <LinkContainer to={links} {...otherprops}>\r\n      {children}\r\n    </LinkContainer>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLORS, FONT, SIZES } from '../../constants/theme';\r\n\r\nconst Container = styled.div`\r\n  width: ${({ tips }) => (tips ? '90px' : '120px')};\r\n  height: 36px;\r\n  border-radius: ${SIZES.radiusSmall};\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-family: ${FONT.korean};\r\n  font-size: 0.7rem;\r\n  text-align: center;\r\n  font-weight: 800;\r\n  letter-spacing: 0.1rem;\r\n\r\n  background-color: ${({ secondary }) =>\r\n    secondary ? `${COLORS.secondary}` : `${COLORS.primaryLight}`};\r\n  color: ${COLORS.primaryDark};\r\n\r\n  &.showhints {\r\n    letter-spacing: 1px;\r\n  }\r\n  &.hint {\r\n    font-family: ${FONT.english};\r\n    font-weight: 600;\r\n    background-color: ${COLORS.primaryLight};\r\n  }\r\n  &.correct {\r\n    background-color: ${COLORS.secondary};\r\n    font-family: ${FONT.korean};\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst Snippet = ({ children, ...otherProps }) => {\r\n  return <Container {...otherProps}>{children}</Container>;\r\n};\r\n\r\nexport default Snippet;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLORS, FONT, SIZES, SCREEN } from '../../constants/theme';\r\nimport Snippet from '../Snippet/Snippet';\r\n\r\nconst Container = styled.div`\r\n  width: 90%;\r\n  border-radius: ${SIZES.radiusSmall};\r\n  padding: 1.2rem;\r\n  box-shadow: 0 4px 8px 0 ${COLORS.grayMiddle};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  text-align: start;\r\n\r\n  font-family: ${FONT.korean};\r\n  font-weight: 200;\r\n  color: ${COLORS.textDark};\r\n\r\n  background: white;\r\n  border: 1px solid ${COLORS.grayMiddle};\r\n  transition: 0.3s ease;\r\n\r\n  ul {\r\n    margin: 0.5rem 0;\r\n    font-size: 14px;\r\n    line-height: 1.4rem;\r\n    list-style: none;\r\n\r\n    #tip {\r\n      color: ${COLORS.grayDeepDark};\r\n      padding-left: 0.4rem;\r\n\r\n      span {\r\n        color: ${COLORS.textDark};\r\n        background: ${COLORS.primaryShaodw};\r\n        padding: 2px 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 8px 16px 0 ${COLORS.grayDark};\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: 300px;\r\n    height: 330px;\r\n  }\r\n\r\n  @media ${SCREEN.laptop} {\r\n    width: 450px;\r\n    height: 280px;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: ${COLORS.grayDeepDark};\r\n  margin-bottom: 0.6rem;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  color: ${COLORS.textDark};\r\n  font-size: 15px;\r\n  padding-left: 0.7rem;\r\n`;\r\n\r\nconst Card = ({ children, alert, title, ...otherProps }) => {\r\n  return (\r\n    <Container {...otherProps}>\r\n      <Header>\r\n        <Snippet {...otherProps}>{alert}</Snippet>\r\n        {title}\r\n      </Header>\r\n      <Content>{children}</Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\nimport { SCREEN } from '../../constants/theme';\r\n\r\nconst Center = styled.div`\r\n  width: ${({ landing }) => (landing ? '100%' : '100%')};\r\n  height: ${({ inGame }) => (inGame ? '100%' : '')};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: ${({ inGame }) => (inGame ? 'center' : 'space-around')};\r\n  align-items: center;\r\n\r\n  background: ${({ bgcolor }) => (bgcolor ? `${bgcolor}` : 'transparent')};\r\n\r\n  @media ${SCREEN.tablet} {\r\n    height: ${({ inGame }) => inGame && '80vh'};\r\n    background: #ffffff;\r\n    #first {\r\n      order: 1;\r\n    }\r\n    #second {\r\n      order: 2;\r\n    }\r\n    #third {\r\n      order: 3;\r\n    }\r\n    #four {\r\n      order: 4;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Center;\r\n","import styled from 'styled-components';\r\nimport { SCREEN } from '../../constants/theme';\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default CardContainer;\r\n","import styled from 'styled-components';\r\nimport { SIZES, SCREEN } from '../../constants/theme';\r\n\r\nconst RoundContainer = styled.div`\r\n  width: 100%;\r\n  height: inherit;\r\n  background: ${({ bgcolor }) => (bgcolor ? `${bgcolor}` : '#ffffff')};\r\n  border-top-left-radius: ${SIZES.radiusBig};\r\n  border-top-right-radius: ${SIZES.radiusBig};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 1.7rem;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    height: ${({ main }) => (main ? '' : '210px')};\r\n\r\n    #three {\r\n      order: 3;\r\n    }\r\n    #two {\r\n      order: 2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default RoundContainer;\r\n","import levelZero from './level0.svg';\r\nimport levelOne from './level1.svg';\r\nimport levelTwo from './level2.svg';\r\nimport levelThree from './level3.svg';\r\nimport levelFour from './level4.svg';\r\nimport levelFive from './level5.svg';\r\nimport levelError from './error.svg';\r\n\r\nconst levelImage = {\r\n  zero: levelZero,\r\n  one: levelOne,\r\n  two: levelTwo,\r\n  three: levelThree,\r\n  four: levelFour,\r\n  five: levelFive,\r\n  none: levelError,\r\n};\r\n\r\nexport default levelImage;\r\n","export default __webpack_public_path__ + \"static/media/level0.86e6fdd7.svg\";","export default __webpack_public_path__ + \"static/media/level1.5cec1664.svg\";","export default __webpack_public_path__ + \"static/media/level2.0e58a45e.svg\";","export default __webpack_public_path__ + \"static/media/level3.87748e91.svg\";","export default __webpack_public_path__ + \"static/media/level4.7fdb0c58.svg\";","export default __webpack_public_path__ + \"static/media/level5.9d62a9b0.svg\";","export default __webpack_public_path__ + \"static/media/error.7be81717.svg\";","import styled from 'styled-components';\r\nimport { SCREEN, SIZES } from '../../constants/theme';\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  padding: ${({ main }) => (main ? '0 2rem 2rem 2rem' : '1rem 0 0 0')};\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  justify-content: ${({ main }) => (main ? 'space-between' : 'center')};\r\n\r\n  img {\r\n    display: none;\r\n    transition: width 1s ease;\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: ${SIZES.tabletWidth};\r\n    justify-content: start;\r\n    padding: 0;\r\n\r\n    img {\r\n      display: block;\r\n      position: relative;\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  @media ${SCREEN.laptop} {\r\n    width: ${({ main }) => (main ? '80%' : '85%')};\r\n    max-width: ${SIZES.laptopWidth};\r\n    align-items: center;\r\n\r\n    img {\r\n      display: flex;\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Row;\r\n","import styled, { css } from 'styled-components';\r\nimport { COLORS, SCREEN, FONT } from '../../constants/theme';\r\n\r\nconst landingStyles = css`\r\n  width: 400px;\r\n  height: auto;\r\n\r\n  color: rgba(255, 255, 255, 0.56);\r\n  text-shadow: -3px 3px 6px ${COLORS.primaryDark}, 0 0 0 ${COLORS.primaryLight};\r\n\r\n  @media ${SCREEN.tablet} {\r\n    font-size: 5.4rem;\r\n    width: 600px;\r\n    flex-wrap: nowrap;\r\n    color: rgba(108, 99, 255, 0.8);\r\n    text-shadow: 5px -5px 7px #fff, 0 0 0 ${COLORS.primaryDark};\r\n  }\r\n`;\r\n\r\nconst aboutStyles = css`\r\n  margin-top: 1rem;\r\n  color: rgba(108, 99, 255, 0.8);\r\n  text-shadow: 5px -5px 7px #fff, 0 0 0 ${COLORS.primaryDark};\r\n`;\r\n\r\nconst getTitleStyles = (props) => {\r\n  if (props.about) return aboutStyles;\r\n  if (props.landing) return landingStyles;\r\n};\r\n\r\nconst TitleContainer = styled.div`\r\n  text-align: left;\r\n  font-size: 3.2rem;\r\n  font-family: ${FONT.englishTitleCurv};\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n\r\n  ${getTitleStyles}\r\n\r\n  @media ${SCREEN.tablet} {\r\n    font-size: 5.4rem;\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = ({ children, ...props }) => {\r\n  return <TitleContainer {...props}>{children}</TitleContainer>;\r\n};\r\n\r\nexport default TitleWrapper;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const GameEndContext = createContext();\r\n\r\nexport const GameEndProvider = (props) => {\r\n  const [isGameEnd, setIsGameEnd] = useState(false);\r\n\r\n  return (\r\n    <GameEndContext.Provider value={[isGameEnd, setIsGameEnd]}>\r\n      {props.children}\r\n    </GameEndContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const GameResultContext = createContext();\r\n\r\nexport const GameResultProvider = (props) => {\r\n  const [gameResult, setGameResult] = useState([]);\r\n\r\n  return (\r\n    <GameResultContext.Provider value={[gameResult, setGameResult]}>\r\n      {props.children}\r\n    </GameResultContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport LinkButton from '../../components/LinkButton/LinkButton';\r\nimport Card from '../../components/Card/Card';\r\nimport Center from '../../components/Center/Center';\r\nimport CardContainer from '../../components/CardContainer/CardContainer';\r\nimport RoundContainer from '../../components/RoundContainer/RoundContainer';\r\nimport levelImage from '../../constants/image/outroImage/level';\r\nimport Row from '../../components/Row/Row';\r\nimport GameTitle from '../../components/GameTitle/GameTitle';\r\nimport Snippet from '../../components/Snippet/Snippet';\r\n\r\nimport { GameEndContext } from '../../context/GamEndContext/GameEndContext';\r\nimport { GameResultContext } from '../../context/GameResultContext/GameResultContext';\r\n\r\nimport { COLORS } from '../../constants/theme';\r\n\r\nconst LandingPage = () => {\r\n  // eslint-disable-next-line\r\n  const [isGameEnd, setIsGameEnd] = useContext(GameEndContext);\r\n  // eslint-disable-next-line\r\n  const [gameResult, setGameResult] = useContext(GameResultContext);\r\n\r\n  useEffect(() => {\r\n    setIsGameEnd(false);\r\n    setGameResult([]);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Center bgcolor={`${COLORS.primaryDark}`} landing>\r\n      <Row main>\r\n        <GameTitle landing>K-pop Master Quiz</GameTitle>\r\n        <img src={levelImage.four} alt='우주에서 학구열이 강한 몬스터' />\r\n      </Row>\r\n      <RoundContainer main>\r\n        <CardContainer id='three'>\r\n          <Card alert='플레이 방법' title='2020-02'>\r\n            <ul>\r\n              <li>노래를 듣고 10초 안에 노래제목을 맞추는 게임입니다.</li>\r\n              <li>6초에 힌트가 나가니 참고해주세요.</li>\r\n              <li>대소문자 구분과 공백, 특수문자는 무시합니다.</li>\r\n              <li id='tip'>\r\n                🚩 정답이 <span>Crazy Over You</span>일 때,\r\n                <br />\r\n                <span>crazyoveryou</span> 혹은 <span>크레이지오버유</span>으로\r\n                제출해도 정답 처리됩니다.\r\n              </li>\r\n            </ul>\r\n          </Card>\r\n          <Card alert='주의 사항' title='2020-02' secondary>\r\n            <ul>\r\n              <li>아직 블랙핑크만 지원됩니다! 😥</li>\r\n              <li>유튜브 프리미엄을 사용해야지 원활한 플레이가 가능합니다.</li>\r\n            </ul>\r\n            <ul style={{ position: 'relative' }}>\r\n              <li>\r\n                <Snippet style={{ position: 'absolute', left: '-16px' }}>\r\n                  지원예정\r\n                </Snippet>\r\n              </li>\r\n              <li style={{ paddingTop: '2.5rem' }}>년도별 top 100</li>\r\n              <li>가수 (검색 가능)</li>\r\n            </ul>\r\n          </Card>\r\n        </CardContainer>\r\n        <Row id='two'>\r\n          <LinkButton links={'/start'}>start</LinkButton>\r\n        </Row>\r\n      </RoundContainer>\r\n    </Center>\r\n  );\r\n};\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/checkImg.2a21947c.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ReactPlayer from 'react-player/youtube';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 0px;\r\n  height: 0px;\r\n`;\r\n\r\nconst Player = ({ url }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <ReactPlayer url={url} playing />\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { COLORS, SCREEN, SIZES } from '../../../../constants/theme';\r\n\r\nimport { GameResultContext } from '../../../../context/GameResultContext/GameResultContext';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 1rem;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: ${COLORS.primaryMiddle};\r\n  margin-bottom: 2rem;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    max-width: ${SIZES.gameLayoutWidth};\r\n    background-color: ${COLORS.grayMiddle};\r\n    height: 0.7rem;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst SessionBox = styled.div`\r\n  width: 10%;\r\n  height: 100%;\r\n  border-right: 2px solid rgba(255, 255, 255, 0.45);\r\n\r\n  &.correct {\r\n    background-color: ${COLORS.secondaryDark};\r\n  }\r\n  &.wrong {\r\n    background-color: ${COLORS.textBlack};\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    &.wrong {\r\n      background-color: ${COLORS.grayDeepDark};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Session = () => {\r\n  // eslint-disable-next-line\r\n  const [gameResult, setGameResult] = useContext(GameResultContext);\r\n  return (\r\n    <Wrapper>\r\n      {gameResult.map((item) => (\r\n        <SessionBox\r\n          className={`${item.result === 'correct' ? 'correct' : 'wrong'}`}\r\n          id={item.id}\r\n        />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Session;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SCREEN, COLORS, SIZES } from '../../../../constants/theme';\r\n\r\nconst Wrapper = styled.ul`\r\n  width: 100%;\r\n  max-width: 360px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 0 1.3rem;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    max-width: ${SIZES.gameLayoutMediumWidth};\r\n    height: 250px;\r\n    padding: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst Log = styled.li`\r\n  width: 100%;\r\n  margin-top: 8px;\r\n\r\n  font-family: 'nanum gothic';\r\n  font-size: 14px;\r\n  color: ${COLORS.textWhiteMid};\r\n  text-align: left;\r\n\r\n  list-style: none;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n`;\r\n\r\nconst LogList = ({ giveAnswers }) => {\r\n  return (\r\n    <Wrapper>\r\n      {giveAnswers\r\n        .filter((answer, idx) => idx < 5)\r\n        .map((answer, idx) => (\r\n          <Log key={idx}>{answer}</Log>\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LogList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst Hint = ({ trackName }) => {\r\n  const [givenHints, setGivenHints] = useState('');\r\n\r\n  useEffect(() => {\r\n    let result = '';\r\n\r\n    if (trackName.length < 7) {\r\n      englishRegex.test(trackName)\r\n        ? (result = englishHint(trackName, 1))\r\n        : (result = getKoreanInitials(trackName));\r\n    } else {\r\n      englishRegex.test(trackName)\r\n        ? (result = englishHint(trackName))\r\n        : (result = getKoreanInitials(trackName));\r\n    }\r\n\r\n    setGivenHints(result);\r\n    // eslint-disable-next-line\r\n  }, [trackName]);\r\n\r\n  const englishRegex = /\\w/g;\r\n\r\n  const getKoreanInitials = (string) => {\r\n    return string\r\n      .split('')\r\n      .map((char) => {\r\n        const index = (char.charCodeAt(0) - 44032) / 28 / 21;\r\n        if (index >= 0) return String.fromCharCode(index + 4352);\r\n        return char;\r\n      })\r\n      .join('');\r\n  };\r\n\r\n  const englishHint = (string, hints = 3) => {\r\n    let filteredString = string.replace(/\\W/g, '').toLowerCase();\r\n    let hintString = Array(filteredString.length).fill('_');\r\n    let hintsRemainig = hints;\r\n\r\n    while (hintsRemainig) {\r\n      const i = Math.floor(Math.random() * hintString.length);\r\n      if (hintString[i] === '_') {\r\n        hintString[i] = filteredString.charAt(i);\r\n        hintsRemainig--;\r\n      }\r\n    }\r\n\r\n    return hintString.join('');\r\n  };\r\n\r\n  return <div>{givenHints}</div>;\r\n};\r\n\r\nexport default Hint;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { AiFillAlert } from 'react-icons/ai';\r\n\r\nimport Hint from '../Hint/Hint';\r\nimport Snippet from '../../../../components/Snippet/Snippet';\r\n\r\nimport { COLORS, FONT, SCREEN, SIZES } from '../../../../constants/theme';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 360px;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  .showHints {\r\n    display: flex;\r\n    align-self: flex-start;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  #icon {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 36px;\r\n  align-items: flex-start;\r\n  margin-bottom: 2rem;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: ${SIZES.gameLayoutMediumWidth};\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: ${SIZES.gameLayoutMediumWidth};\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  color: ${COLORS.textDark};\r\n  font-family: ${FONT.english};\r\n  font-size: 1.6rem;\r\n  font-weight: 800;\r\n  text-align: center;\r\n  letter-spacing: 2px;\r\n  flex-wrap: nowrap;\r\n  color: ${COLORS.textDark};\r\n\r\n  @media ${SCREEN.tablet} {\r\n    font-size: 1.7rem;\r\n  }\r\n`;\r\n\r\nconst HintContainer = ({ children, hint, showHints }) => {\r\n  return (\r\n    <TextContainer>\r\n      <Title>\r\n        <Snippet tips className={`showHints ${showHints ? 'hint' : 'correct'}`}>\r\n          <AiFillAlert id='icon' size='0.8rem' />\r\n          {hint ? 'hint' : '정답'}\r\n        </Snippet>\r\n      </Title>\r\n      <Content>{children}</Content>\r\n    </TextContainer>\r\n  );\r\n};\r\n\r\nconst ShowHintOrAnswer = ({ trackName, showHints, timeOver }) => {\r\n  return (\r\n    <Wrapper>\r\n      {showHints && !timeOver && (\r\n        <HintContainer hint showHints>\r\n          <Hint trackName={trackName} />\r\n        </HintContainer>\r\n      )}\r\n      {timeOver && <HintContainer>{trackName}</HintContainer>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ShowHintOrAnswer;\r\n","import styled from 'styled-components';\r\nimport { SCREEN, FONT, COLORS, SIZES } from '../../constants/theme';\r\n\r\nconst InputContainer = styled.div`\r\n  width: 100%;\r\n  font-family: ${FONT.english};\r\n  margin: 0.5rem 2rem;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  input {\r\n    font-size: 1rem;\r\n    padding: 1.3rem;\r\n    width: 360px;\r\n\r\n    height: 3.4rem;\r\n    border: none;\r\n    border-radius: ${SIZES.radiusSmall};\r\n    background-color: ${COLORS.primaryMiddle};\r\n\r\n    font-size: 1.3rem;\r\n    font-family: ${FONT.korean};\r\n    font-weight: 200;\r\n    color: ${COLORS.textDark};\r\n\r\n    &:focus {\r\n      outline: none;\r\n      background-color: ${COLORS.primaryLight};\r\n    }\r\n  }\r\n\r\n  & ::placeholder {\r\n    color: ${COLORS.textWhiteMid};\r\n    font-size: 1rem;\r\n    font-family: ${FONT.english};\r\n    font-weight: 300;\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: 100%;\r\n    margin: 0;\r\n\r\n    input {\r\n      width: ${SIZES.gameLayoutMediumWidth};\r\n      border-radius: 0;\r\n      background-color: transparent;\r\n      border-bottom: 3px solid ${COLORS.textWhiteMid};\r\n      color: white;\r\n\r\n      &:focus {\r\n        background-color: transparent;\r\n        border-bottom: 3px solid #ffffff;\r\n      }\r\n    }\r\n\r\n    & ::placeholder {\r\n      color: ${COLORS.textWhiteMid};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default InputContainer;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { COLORS, FONT, SIZES, SCREEN } from '../../constants/theme';\r\n\r\nconst hoverStyle = css`\r\n  :hover {\r\n    box-shadow: 0 8px 16px 0 ${COLORS.grayDark};\r\n  }\r\n`;\r\n\r\nconst borderAndShadow = css`\r\n  border: 1px solid ${COLORS.grayMiddle};\r\n  box-shadow: 0 4px 8px 0 ${COLORS.grayMiddle};\r\n`;\r\n\r\nconst inGameCardStyle = css`\r\n  @media ${SCREEN.tablet} {\r\n    width: ${SIZES.gameLayoutWidth};\r\n    height: 600px;\r\n\r\n    background: white;\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-rows: 200px 400px;\r\n    grid-template-areas:\r\n      'hint hint'\r\n      'answer answer';\r\n\r\n    text-align: start;\r\n\r\n    font-family: ${FONT.korean};\r\n    font-weight: 200;\r\n    color: ${COLORS.textDark};\r\n\r\n    #four {\r\n      grid-area: answer;\r\n    }\r\n\r\n    #second {\r\n      grid-area: hint;\r\n    }\r\n\r\n    ${borderAndShadow};\r\n  }\r\n`;\r\n\r\nconst savingCardStyle = css`\r\n  border-radius: ${SIZES.radiusSmall};\r\n  padding: 1rem;\r\n\r\n  ${borderAndShadow};\r\n\r\n  background: white;\r\n  margin-bottom: 2rem;\r\n  height: auto;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: ${SIZES.tabletWidth};\r\n  }\r\n\r\n  &.saved {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst rankCardStyle = css`\r\n  width: 90%;\r\n  max-width: ${SIZES.gameLayoutWidth};\r\n  margin-top: 2rem;\r\n  border-radius: ${SIZES.radiusSmall};\r\n  padding: 2rem;\r\n  ${borderAndShadow};\r\n  ${hoverStyle}\r\n`;\r\n\r\nconst mailCardStyle = css`\r\n  width: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding: 1.2rem;\r\n  margin-bottom: 2rem;\r\n\r\n  border-radius: ${SIZES.radiusBig};\r\n\r\n  ${borderAndShadow};\r\n  ${hoverStyle}\r\n\r\n  @media ${SCREEN.tablet} {\r\n    width: ${SIZES.gameLayoutWidth};\r\n  }\r\n`;\r\n\r\nconst getCardStyles = (props) => {\r\n  if (props.inGame) {\r\n    return inGameCardStyle;\r\n  }\r\n  if (props.rank) {\r\n    return rankCardStyle;\r\n  }\r\n  if (props.mail) {\r\n    return mailCardStyle;\r\n  }\r\n  return props.savingRecord && savingCardStyle;\r\n};\r\n\r\nconst CleanCard = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: 0.3s ease;\r\n\r\n  ${getCardStyles}\r\n`;\r\n\r\nconst CleanCardContainer = ({ children, ...props }) => {\r\n  return <CleanCard {...props}>{children}</CleanCard>;\r\n};\r\n\r\nexport default CleanCardContainer;\r\n","import styled from 'styled-components';\r\nimport { COLORS, SCREEN } from '../../../../constants/theme';\r\n\r\nconst AnswerCard = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  img {\r\n    width: 90px;\r\n    position: absolute;\r\n    right: 1rem;\r\n    bottom: 0;\r\n    z-index: 2;\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 1.5rem;\r\n\r\n    background: rgb(32, 34, 38);\r\n    background: linear-gradient(\r\n      190deg,\r\n      ${COLORS.primaryMiddle} 0%,\r\n      ${COLORS.primary} 100%\r\n    );\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    img {\r\n      width: 140px;\r\n    }\r\n  }\r\n`;\r\nexport default AnswerCard;\r\n","export default __webpack_public_path__ + \"static/media/correct.f46daee7.mp3\";","export default __webpack_public_path__ + \"static/media/wrong1.09270cc3.mp3\";","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport useSound from 'use-sound';\r\nimport checkImg from '../../constants/image/checkImg.svg';\r\n\r\nimport Player from './Section/Player/Player';\r\nimport Session from './Section/Session/Session';\r\nimport LogList from './Section/LogList/LogList';\r\nimport ShowHintOrAnswer from './Section/ShowHintOrAnswer/ShowHintOrAnswer';\r\nimport Center from '../../components/Center/Center';\r\nimport RoundContainer from '../../components/RoundContainer/RoundContainer';\r\nimport InputContainer from '../../components/InputContainer/InputContainer';\r\nimport CleanCard from '../../components/Card/CleanCard';\r\nimport AnswerCard from './Section/AnswerCard/AnswerCard';\r\n\r\nimport correctSfx from '../../constants/sounds/correct.mp3';\r\nimport wrongSfx from '../../constants/sounds/wrong1.mp3';\r\n\r\nimport { GameEndContext } from '../../context/GamEndContext/GameEndContext';\r\nimport { GameResultContext } from '../../context/GameResultContext/GameResultContext';\r\nimport { COLORS } from '../../constants/theme';\r\n\r\nconst GameLayout = ({ trackList }) => {\r\n  const [isGameEnd, setIsGameEnd] = useContext(GameEndContext);\r\n  const [gameResult, setGameResult] = useContext(GameResultContext);\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [givenAnswersList, setGivenAnswersList] = useState([]);\r\n\r\n  const [currentRound, setCurrentRound] = useState(0);\r\n  const [url, setUrl] = useState('');\r\n  const [showHints, setShowHints] = useState(false);\r\n  const [timeOver, setTimeOver] = useState(false);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n\r\n  const focusedInput = useRef(null);\r\n\r\n  const [playCorrect] = useSound(correctSfx, { volume: 0.15 });\r\n  const [playWrong] = useSound(wrongSfx, { volume: 0.15 });\r\n\r\n  useEffect(() => {\r\n    focusedInput.current.focus();\r\n    setStartTime(Date.now());\r\n    setUrl(trackList[currentRound].url);\r\n    setShowHints(false);\r\n\r\n    const giveHints = setTimeout(() => {\r\n      setShowHints(true);\r\n    }, 6000);\r\n\r\n    const timer = setTimeout(() => {\r\n      setInputValue('');\r\n      setTimeOver(true);\r\n    }, 10000);\r\n\r\n    const setOver = setTimeout(() => {\r\n      setTimeOver(false);\r\n      if (!isGameEnd) {\r\n        goNextRound();\r\n      }\r\n    }, 13000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearTimeout(giveHints);\r\n      clearTimeout(setOver);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentRound]);\r\n\r\n  const timeOut = () => {\r\n    const endTime = Date.now();\r\n    const diff = endTime - startTime;\r\n\r\n    return diff;\r\n  };\r\n\r\n  const isCorrect = (answer) => {\r\n    const regex = /[ '\"-_]+/g;\r\n    const englishRegex = /\\w/g;\r\n\r\n    let givenAnswer = answer;\r\n    let correct = trackList[currentRound].trackName;\r\n    let alterCorrect = trackList[currentRound].alterTrackName;\r\n\r\n    englishRegex.test(answer)\r\n      ? (givenAnswer = answer.toLowerCase().replace(regex, ''))\r\n      : (givenAnswer = answer.replace(regex, ''));\r\n\r\n    englishRegex.test(correct)\r\n      ? (correct = correct.toLowerCase().replace(regex, ''))\r\n      : (correct = correct.replace(regex, ''));\r\n\r\n    englishRegex.test(alterCorrect)\r\n      ? (alterCorrect = alterCorrect.toLowerCase().replace(regex, ''))\r\n      : (alterCorrect = alterCorrect.replace(regex, ''));\r\n\r\n    if (givenAnswer === correct || givenAnswer === alterCorrect) {\r\n      playCorrect();\r\n      let answerResult = 'correct';\r\n      goNextRound(answerResult);\r\n    } else {\r\n      playWrong();\r\n    }\r\n  };\r\n\r\n  const goNextRound = (answerResult) => {\r\n    const newResult = {\r\n      id: Math.random().toString(36).substr(2, 4),\r\n      roundIndex: currentRound,\r\n      trackName: trackList[currentRound].trackName,\r\n      result: answerResult === 'correct' ? 'correct' : 'wrong',\r\n      responseTime: answerResult === 'correct' ? timeOut() : 10000,\r\n    };\r\n\r\n    setGameResult([...gameResult, newResult]);\r\n\r\n    if (currentRound === 9) {\r\n      setIsGameEnd(true);\r\n      return setUrl('');\r\n    }\r\n\r\n    setCurrentRound(currentRound + 1);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const answerSubmit = (event) => {\r\n    event.preventDefault();\r\n    setGivenAnswersList([inputValue, ...givenAnswersList]);\r\n    isCorrect(inputValue);\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <Center bgcolor={`${COLORS.primaryDark}`} inGame>\r\n      <Player url={url} />\r\n      <>\r\n        <Session id='first' />\r\n        <CleanCard inGame>\r\n          <AnswerCard id='four'>\r\n            <img src={checkImg} alt='귀여운 체크' />\r\n            <InputContainer>\r\n              <form onSubmit={answerSubmit}>\r\n                <input\r\n                  placeholder='guess what?'\r\n                  type='text'\r\n                  value={inputValue}\r\n                  onChange={onChange}\r\n                  ref={focusedInput}\r\n                  disabled={timeOver}\r\n                />\r\n              </form>\r\n            </InputContainer>\r\n            <LogList giveAnswers={givenAnswersList} />\r\n          </AnswerCard>\r\n\r\n          <RoundContainer id='second'>\r\n            <ShowHintOrAnswer\r\n              trackName={trackList[currentRound].trackName}\r\n              showHints={showHints}\r\n              timeOver={timeOver}\r\n              className='inputWrapper'\r\n            />\r\n          </RoundContainer>\r\n        </CleanCard>\r\n      </>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default GameLayout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLORS } from '../../../../constants/theme';\r\nimport { AwesomeButtonSocial } from 'react-awesome-button';\r\nimport 'react-awesome-button/dist/themes/theme-blue.css';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  font-size: 20px;\r\n  font-weight: 200;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  padding: 0 1rem;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nconst ShareTitle = styled.h2`\r\n  margin-bottom: 1rem;\r\n  font-family: 'nanum gothic';\r\n`;\r\n\r\nconst Highlight = styled.span`\r\n  background-image: linear-gradient(\r\n    120deg,\r\n    ${COLORS.primaryShaodw} 0%,\r\n    ${COLORS.primaryMiddle} 100%\r\n  );\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 0.4em;\r\n  background-position: 0 100%;\r\n  transition: background-size 0.25s ease-in;\r\n\r\n  &:hover {\r\n    background-size: 100% 88%;\r\n  }\r\n`;\r\n\r\nconst ShareList = styled.div`\r\n  width: 6rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ShareMyRecord = () => {\r\n  return (\r\n    <Wrapper>\r\n      <ShareTitle>\r\n        <Highlight>내 결과 공유</Highlight>\r\n      </ShareTitle>\r\n      <ShareList>\r\n        <AwesomeButtonSocial type='facebook' />\r\n        <AwesomeButtonSocial type='twitter' />\r\n      </ShareList>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ShareMyRecord;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  margin-bottom: 2rem;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n\r\n  background: linear-gradient(\r\n    180deg,\r\n    rgba(255, 255, 255, 0.2) 0%,\r\n    rgba(255, 255, 255, 0.8) 100%\r\n  );\r\n  box-shadow: 0 8px 20px 0 rgba(251, 128, 165, 0.2);\r\n  backdrop-filter: blur(14.5px);\r\n  -webkit-backdrop-filter: blur(14.5px);\r\n  border-radius: 9px;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-weight: 200;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Content = styled.span`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: black;\r\n`;\r\n\r\nconst Em = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\n// 이전 기록이 있을 경우, 자동으로 DB에 저장하기\r\n// 이전 기록과 비교해서 지금이 더 나으면 local에 저장하기\r\nconst PreviousRecord = ({ averageResponseTime, gameResult }) => {\r\n  const [existingUserName, setExistingUserName] = useState('');\r\n  const [existingUserRecord, setExistingUserRecord] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userName = localStorage.getItem('_userName');\r\n\r\n    if (userName) {\r\n      if (averageResponseTime > 0) {\r\n        uploadRecordToDB(userName);\r\n        setExistingUserName(userName);\r\n\r\n        const previousRecord = localStorage.getItem('_personalRecord');\r\n        setExistingUserRecord(previousRecord);\r\n\r\n        const comparedResult = compareRecord(\r\n          previousRecord,\r\n          averageResponseTime\r\n        );\r\n        if (comparedResult === 'better now') {\r\n          uploadRecordToLocal(averageResponseTime);\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const uploadRecordToDB = (user) => {\r\n    const correctAnswers = gameResult\r\n      .filter((game) => game.result === 'correct')\r\n      .map((song) => song.trackName);\r\n\r\n    const wrongAnswers = gameResult\r\n      .filter((game) => game.result === 'wrong')\r\n      .map((song) => song.trackName);\r\n\r\n    const userData = {\r\n      userName: user,\r\n      record: averageResponseTime,\r\n      correctTrackName: correctAnswers,\r\n      wrongTrackName: wrongAnswers,\r\n      gameResult: gameResult,\r\n    };\r\n\r\n    axios.post('/api/user/upload', userData);\r\n  };\r\n\r\n  const uploadRecordToLocal = (currentRecord) => {\r\n    localStorage.setItem('_personalRecord', currentRecord);\r\n  };\r\n\r\n  const compareRecord = (previousRecord, currentRecord) => {\r\n    if (previousRecord > currentRecord) {\r\n      return 'better now';\r\n    }\r\n    return 'not better';\r\n  };\r\n\r\n  if (!existingUserName) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>\r\n        ✨ <Em>{existingUserName}</Em>\r\n        님의 이전 최고 기록\r\n      </Title>\r\n      <Content>{existingUserRecord}초</Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PreviousRecord;\r\n","import styled from 'styled-components';\r\n\r\nconst SavingWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  div {\r\n    display: flex;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n\r\n    #icon {\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n  span {\r\n    padding-left: 1.5rem;\r\n    font-size: 14px;\r\n    color: rgba(0, 0, 0, 0.7);\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport default SavingWrapper;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '../../../../constants/theme';\r\n\r\nconst SavingInputcontainer = styled.form`\r\n  .name-input-wrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    margin-top: 1rem;\r\n    margin-left: 1.3rem;\r\n\r\n    input {\r\n      width: 60%;\r\n      max-width: 14rem;\r\n      height: 2rem;\r\n      padding-left: 8px;\r\n      border: none;\r\n      border-radius: 0;\r\n      line-height: 70px;\r\n      background-color: transparent;\r\n      color: black;\r\n      font-size: 20px;\r\n      outline: none;\r\n      border-bottom: 3px solid rgba(0, 0, 0, 0.6);\r\n      font-family: 'Montserrat', sans-serif;\r\n\r\n      :focus {\r\n        border-bottom: 3px solid black;\r\n      }\r\n    }\r\n\r\n    ::placeholder {\r\n      padding: 10px;\r\n    }\r\n\r\n    button {\r\n      width: 5rem;\r\n      height: 2rem;\r\n      border: none;\r\n      background: ${COLORS.primaryDark};\r\n      color: white;\r\n      letter-spacing: 2px;\r\n      border-radius: 6px;\r\n      font-weight: bold;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      &:hover {\r\n        background: #363a42;\r\n        transform: scale(0.95);\r\n      }\r\n      &:active {\r\n        outline: none;\r\n        border: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SavingInputcontainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { RiSave2Fill } from 'react-icons/ri';\r\n\r\nimport CleanCard from '../../../../components/Card/CleanCard';\r\nimport SavingWrapper from '../SavingWrapper/SavingWrapper';\r\nimport SavingInputcontainer from '../SavingInputcontainer/SavingInputcontainer';\r\nimport './SavingMyRecord.scss';\r\n\r\n// 이전 데이터가 있으면 이거 자체가 안보이게\r\n// 이전 데이터가 없으면 이름 입력 & db와 로컬에 기록 저장\r\nconst SavingMyRecord = ({ averageResponseTime, gameResult }) => {\r\n  const [name, setName] = useState('');\r\n  const [alreadySavedName, setAlreadySavedName] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('_userName');\r\n    setAlreadySavedName(saved);\r\n  }, []);\r\n\r\n  const update = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n    uploadRecordToLocal(name);\r\n    uploadRecordToDB(name);\r\n    setIsSaving(true);\r\n    setName('');\r\n  };\r\n\r\n  const uploadRecordToLocal = (userName) => {\r\n    localStorage.setItem('_userName', userName);\r\n    localStorage.setItem('_personalRecord', averageResponseTime);\r\n  };\r\n\r\n  const uploadRecordToDB = (user) => {\r\n    const correctAnswers = gameResult\r\n      .filter((game) => game.result === 'correct')\r\n      .map((song) => song.trackName);\r\n\r\n    const wrongAnswers = gameResult\r\n      .filter((game) => game.result === 'wrong')\r\n      .map((song) => song.trackName);\r\n\r\n    const userData = {\r\n      userName: user,\r\n      record: averageResponseTime,\r\n      correctTrackName: correctAnswers,\r\n      wrongTrackName: wrongAnswers,\r\n      gameResult: gameResult,\r\n    };\r\n\r\n    axios.post('/api/user/upload', userData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!alreadySavedName && (\r\n        <CleanCard savingRecord className={`${isSaving && 'saved'}`}>\r\n          <SavingWrapper>\r\n            <div>\r\n              <RiSave2Fill id='icon' />\r\n              기록을 저장하시겠습니까?\r\n            </div>\r\n            <span>저장하지 않으면 랭킹에 기록되지 않습니다.</span>\r\n          </SavingWrapper>\r\n          <SavingInputcontainer onSubmit={addName}>\r\n            <div className='name-input-wrapper'>\r\n              <input\r\n                placeholder='이름'\r\n                type='text'\r\n                value={name}\r\n                onChange={update}\r\n                minLength='3'\r\n                maxLength='15'\r\n                autoComplete='off'\r\n                required\r\n                disabled={isSaving}\r\n              />\r\n              <button disabled={isSaving}>저장</button>\r\n            </div>\r\n          </SavingInputcontainer>\r\n        </CleanCard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavingMyRecord;\r\n","import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FiChevronRight } from 'react-icons/fi';\r\nimport { COLORS } from '../../../../constants/theme';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  border-radius: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  font-size: 16px;\r\n  color: #2c2c2c;\r\n\r\n  border: 1px solid ${COLORS.grayMiddle};\r\n  box-shadow: 0 4px 8px 0 ${COLORS.grayMiddle};\r\n`;\r\n\r\nconst Title = styled.button`\r\n  width: 100%;\r\n  height: 2rem;\r\n  padding: 1.2rem 1rem;\r\n\r\n  border: none;\r\n  border-radius: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  font-family: 'Nanum gothic';\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  cursor: pointer;\r\n\r\n  background: transparent;\r\n  background-image: linear-gradient(\r\n    120deg,\r\n    ${COLORS.primaryShaodw} 0%,\r\n    ${COLORS.primaryMiddle} 100%\r\n  );\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 0%;\r\n  background-position: 100% 100%;\r\n  transition: background-size 0.3s ease;\r\n\r\n  &:hover {\r\n    border: none;\r\n    outline: none;\r\n    background-size: 100% 100%;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .accordion-icon {\r\n    transition: transform 0.3s ease;\r\n    margin-left: 4px;\r\n    color: black;\r\n  }\r\n\r\n  .rotate {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  #icon {\r\n    margin-right: 7px;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  font-family: 'Nanum gothic';\r\n  font-weight: 200;\r\n`;\r\n\r\nconst Accordion = ({ title, content }) => {\r\n  const substance = useRef(null);\r\n  const [isActivate, setIsActivate] = useState(false);\r\n  const [tableHeight, setTableHeight] = useState('0rem');\r\n\r\n  const toggleAccordion = () => {\r\n    setIsActivate(!isActivate);\r\n    setTableHeight(isActivate ? '0rem' : `${substance.current.scrollHeight}px`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title onClick={toggleAccordion}>\r\n        {title}\r\n        <FiChevronRight\r\n          className={`${isActivate && 'rotate'} accordion-icon`}\r\n          size='1.2rem'\r\n        />\r\n      </Title>\r\n      <Content style={{ height: tableHeight }} ref={substance}>\r\n        {content}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst UsersAverageDataContainer = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.4);\r\n  padding: 0.5rem 0;\r\n`;\r\nconst UsersData = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-self: flex-end;\r\n  justify-content: space-between;\r\n  line-height: 24px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst userAverageData = ({ userRecords }) => {\r\n  return (\r\n    <UsersAverageDataContainer>\r\n      <UsersData>\r\n        <span>상위 10위 평균</span>\r\n        <span>\r\n          {(\r\n            userRecords\r\n              .map((user) => user.record)\r\n              .filter((item, index) => index < 10)\r\n              .reduce((previous, current) => previous + current) / 10\r\n          ).toFixed(2)}\r\n          초\r\n        </span>\r\n      </UsersData>\r\n      <UsersData>\r\n        <span>유저들 전체 평균</span>\r\n        <span>\r\n          {(\r\n            userRecords\r\n              .map((user) => user.record)\r\n              .reduce((prev, curr) => prev + curr) / userRecords.length\r\n          ).toFixed(2)}\r\n          초\r\n        </span>\r\n      </UsersData>\r\n    </UsersAverageDataContainer>\r\n  );\r\n};\r\n\r\nexport default userAverageData;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport UserAverageData from '../UsersAverageData/UserAverageData';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst TableContainer = styled.table`\r\n  width: 100%;\r\n  font-family: 'Nanum Gothic';\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  overflow: hidden;\r\n  padding: 0.5rem 1rem 1rem 1rem;\r\n\r\n  td {\r\n    padding: 4px;\r\n    text-align: center;\r\n  }\r\n\r\n  #ranking {\r\n    width: 20%;\r\n  }\r\n  #name {\r\n    width: 40%;\r\n  }\r\n  #record {\r\n    width: 30%;\r\n    text-align: right;\r\n  }\r\n\r\n  #myRecord {\r\n    color: black;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst RankersTable = ({ userRecords, myRecord, userName, quantityToShow }) => {\r\n  return (\r\n    <Wrapper>\r\n      <TableContainer>\r\n        <tbody>\r\n          {userRecords\r\n            .filter((userRecord, index) => index < `${quantityToShow}`)\r\n            .map((userRecord, index) => (\r\n              <tr key={userRecord._id}>\r\n                <td id='ranking'>{index + 1}위</td>\r\n                <td id='name'>{userRecord.userName}</td>\r\n                <td id='record'>{userRecord.record} 초</td>\r\n              </tr>\r\n            ))}\r\n          {myRecord && (\r\n            <>\r\n              <tr>\r\n                <td></td>\r\n                <td>...</td>\r\n                <td></td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td id='myRecord'>\r\n                  {userRecords\r\n                    .map((user) => user.record)\r\n                    .filter((record) => record < myRecord).length + 1}\r\n                  위\r\n                </td>\r\n                <td id='myRecord'>{userName ? userName : '내 순위'}</td>\r\n                <td id='record'>{myRecord} 초</td>\r\n              </tr>\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </TableContainer>\r\n\r\n      <UserAverageData userRecords={userRecords} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RankersTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { RiCake3Line } from 'react-icons/ri';\r\n\r\nconst Titlecontainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  .total {\r\n    font-weight: 200;\r\n    font-size: 14px;\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst MyTier = styled.span`\r\n  padding-left: 1rem;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  font-weight: 200;\r\n`;\r\n\r\nconst RankersTableTitle = ({ myRecord, userRankList }) => {\r\n  const [percentage, setPercentage] = useState();\r\n  const [tier, setTier] = useState('');\r\n\r\n  useEffect(() => {\r\n    const number = Math.floor(\r\n      (userRankList\r\n        .map((user) => user.record)\r\n        .filter((record) => record < myRecord).length /\r\n        userRankList.length) *\r\n        100\r\n    );\r\n\r\n    if (number > 50) {\r\n      setTier('하위');\r\n      const myUnderTier = 100 - number;\r\n      setPercentage(myUnderTier);\r\n    } else {\r\n      setTier('상위');\r\n      setPercentage(number);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Titlecontainer>\r\n      <RiCake3Line id='icon' />\r\n      {\r\n        userRankList\r\n          .map((user) => user.record)\r\n          .filter((record) => record < myRecord).length\r\n      }\r\n      등 <span className='total'>(총 {userRankList.length}명)</span>\r\n      <MyTier>\r\n        {tier} {percentage}%\r\n      </MyTier>\r\n    </Titlecontainer>\r\n  );\r\n};\r\n\r\nexport default RankersTableTitle;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Accordion from '../Accordion/Accordion';\r\nimport RankersTable from '../RankersTable/RankersTable';\r\nimport RankersTableTitle from '../RankersTableTitle/RankersTableTitle';\r\n\r\nconst RankersRecord = ({ userRankList, myRecord }) => {\r\n  const [existingUserName, setexistingUserName] = useState();\r\n\r\n  useEffect(() => {\r\n    const userName = localStorage.getItem('_userName');\r\n    setexistingUserName(userName);\r\n  }, []);\r\n\r\n  const title = (\r\n    <RankersTableTitle myRecord={myRecord} userRankList={userRankList} />\r\n  );\r\n\r\n  const content = (\r\n    <RankersTable\r\n      userRecords={userRankList}\r\n      myRecord={myRecord}\r\n      userName={existingUserName}\r\n      quantityToShow={3}\r\n    />\r\n  );\r\n\r\n  return <Accordion title={title} content={content} />;\r\n};\r\n\r\nexport default RankersRecord;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { RiTimer2Line } from 'react-icons/ri';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport { FiX } from 'react-icons/fi';\r\n\r\nimport Accordion from '../Accordion/Accordion';\r\n\r\nconst TableContainer = styled.table`\r\n  width: 100%;\r\n  font-size: 16px;\r\n  font-weight: 200;\r\n  margin-top: -0.2rem;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Tablehead = styled.th`\r\n  color: black;\r\n  padding: 10px;\r\n  height: 1rem;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst TableContext = styled.td`\r\n  color: ${({ isWorng }) => (isWorng === 'correct' ? 'black' : 'red')};\r\n  font-weight: 200;\r\n  overflow: hidden;\r\n  padding: 0.3rem 1rem;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 2rem;\r\n  font-size: 16px;\r\n  color: black;\r\n\r\n  #list-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst TitleList = styled.li`\r\n  margin-right: 1rem;\r\n  list-style: none;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-weight: 200;\r\n`;\r\n\r\nconst CurrentRecord = ({ gameResult, averageResponseTime }) => {\r\n  const [quantityOfCorrect, setquantityOfCorrect] = useState(0);\r\n  const [quantityOfWrong, setQuantitiyOfWrong] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const correct = gameResult.filter((game) => game.result === 'correct')\r\n      .length;\r\n    setquantityOfCorrect(correct);\r\n\r\n    const wrong = gameResult.filter((game) => game.result === 'wrong').length;\r\n    setQuantitiyOfWrong(wrong);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const title = (\r\n    <TitleContainer>\r\n      <ul id='list-container'>\r\n        <TitleList>\r\n          <FiCheckCircle id='icon' />\r\n          {quantityOfCorrect}개\r\n        </TitleList>\r\n        <TitleList>\r\n          <FiX id='icon' />\r\n          {quantityOfWrong}개\r\n        </TitleList>\r\n        <TitleList>\r\n          <RiTimer2Line id='icon' />\r\n          평균 {averageResponseTime}초\r\n        </TitleList>\r\n      </ul>\r\n    </TitleContainer>\r\n  );\r\n\r\n  const content = (\r\n    <TableContainer>\r\n      <thead>\r\n        <tr>\r\n          <Tablehead id='index'>순서</Tablehead>\r\n          <Tablehead>노래 제목</Tablehead>\r\n          <Tablehead>초</Tablehead>\r\n          <Tablehead>결과</Tablehead>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {gameResult.map((song) => (\r\n          <tr key={song.id}>\r\n            <TableContext id='index' isWorng={song.result}>\r\n              {song.roundIndex + 1}\r\n            </TableContext>\r\n            <TableContext isWorng={song.result} id='trackName'>\r\n              {song.trackName}\r\n            </TableContext>\r\n            <TableContext isWorng={song.result}>\r\n              {(song.responseTime / 1000).toFixed(2)}\r\n            </TableContext>\r\n            <TableContext isWorng={song.result}>\r\n              {song.result === 'wrong' ? <FiX /> : <FiCheckCircle />}\r\n            </TableContext>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </TableContainer>\r\n  );\r\n\r\n  return <Accordion title={title} content={content} />;\r\n};\r\n\r\nexport default CurrentRecord;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SIZES } from '../../../../constants/theme';\r\n\r\nimport levelImage from '../../../../constants/image/outroImage/level';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Descript = styled.div`\r\n  width: 95%;\r\n  max-width: ${SIZES.tabletWidth};\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  color: black;\r\n  line-height: 23px;\r\n  text-align: center;\r\n  font-family: 'nanum gothic';\r\n`;\r\n\r\nconst Description = ({ averageResponseTime }) => {\r\n  const [myLevel, setMyLevel] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (averageResponseTime < 2) {\r\n      setMyLevel('five');\r\n    } else if (averageResponseTime < 4) {\r\n      setMyLevel('four');\r\n    } else if (averageResponseTime < 5.5) {\r\n      setMyLevel('three');\r\n    } else if (averageResponseTime < 7) {\r\n      setMyLevel('two');\r\n    } else if (averageResponseTime < 9) {\r\n      setMyLevel('one');\r\n    } else {\r\n      setMyLevel('zero');\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const levelDescription = {\r\n    zero:\r\n      '블랙핑크의 노래를 정말 아무것도 모르시군요! 이번 기회에 블랙핑크 노래를 들어보는 건 어때요?',\r\n    one:\r\n      '블랙핑크의 유명한 타이틀곡을 조금은 알고는 있지만, 힌트가 주어져야 간신히 눈치채는 머글이에요!',\r\n    two:\r\n      '블랙핑크의 앨범을 찾아서 들어 볼 정도로 관심은 있지만, 대표곡이 아닌 수록곡은 잘 모르는 입덕 초기 머글이에요!',\r\n    three:\r\n      '블랙핑크의 노래에 푹 빠져있어요. 대표곡도 수록곡도 대부분 알고 있고, 더 알고 싶어 하는 팬심도 가지고 있죠!',\r\n    four:\r\n      '진정한 블링크로 임명합니다! 당신은 모든 노래를 알고 있어요. 부족한 건 타이핑 속도뿐!',\r\n    five:\r\n      '당신은 모든 노래를 거의 첫음만 듣고 알아챌 정도로 알고 있군요! 혹시 블랙핑크 본인이신가요?',\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <img\r\n        src={levelImage[myLevel]}\r\n        alt='해당 레벨을 설명하는 그림'\r\n        width='300'\r\n      />\r\n      <Descript>{levelDescription[myLevel]}</Descript>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='spinner-container'>\r\n      <div className='loader'>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from 'styled-components';\r\nimport { SIZES, SCREEN } from '../../../../constants/theme';\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media ${SCREEN} {\r\n    width: 95%;\r\n    max-width: ${SIZES.laptopWidth};\r\n  }\r\n`;\r\n\r\nexport default PageWrapper;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport useWindowSize from 'react-use/lib/useWindowSize';\r\nimport Confetti from 'react-confetti';\r\n\r\nimport { SIZES } from '../../constants/theme';\r\n\r\nimport { GameResultContext } from '../../context/GameResultContext/GameResultContext';\r\n\r\nimport ShareMyRecord from './Section/ShareMyRecord/ShareMyRecord';\r\nimport PreviousRecord from './Section/PreviousRecord/PreviousRecord';\r\nimport SavingMyRecord from './Section/SavingMyRecord/SavingMyRecord';\r\nimport RankersRecord from './Section/RankersRecord/RankersRecord';\r\nimport CurrentRecord from './Section/CurrentRecord/CurrentRecord';\r\nimport Description from './Section/Description/Description';\r\nimport Spinner from './Section/Spinner/Spinner';\r\nimport LinkButton from '../../components/LinkButton/LinkButton';\r\nimport Center from '../../components/Center/Center';\r\nimport PageWrapper from './Section/PageWrapper/PageWrapper';\r\n\r\nconst ContentWrapper = styled.div`\r\n  max-width: ${SIZES.tabletWidth};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst OutroPage = () => {\r\n  // eslint-disable-next-line\r\n  const [gameResult, setGameResult] = useContext(GameResultContext);\r\n  const { width, height } = useWindowSize();\r\n\r\n  const [userRankList, setUserRankList] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios.get('/api/user/getRecords').then((res) => {\r\n      if (res.data.success) {\r\n        setUserRankList(res.data.userRecordList);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const totalResponseTime = gameResult\r\n    .map((item) => item.responseTime)\r\n    .reduce((previous, currrent) => previous + currrent, 0);\r\n  const averageResponseTime = (totalResponseTime / 10000).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <Confetti\r\n        width={width}\r\n        height={height}\r\n        gravity={0.03}\r\n        recycle={false}\r\n        numberOfPieces={500}\r\n      />\r\n      <Center>\r\n        <PageWrapper>\r\n          <Description averageResponseTime={averageResponseTime} />\r\n          <LinkButton className='secondary' links='/' outro>\r\n            play again\r\n          </LinkButton>\r\n          <ContentWrapper>\r\n            <PreviousRecord\r\n              averageResponseTime={averageResponseTime}\r\n              gameResult={gameResult}\r\n            />\r\n            <SavingMyRecord\r\n              averageResponseTime={averageResponseTime}\r\n              gameResult={gameResult}\r\n            />\r\n            <CurrentRecord\r\n              averageResponseTime={averageResponseTime}\r\n              gameResult={gameResult}\r\n            />\r\n            {isLoading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <RankersRecord\r\n                userRankList={userRankList}\r\n                myRecord={averageResponseTime}\r\n              />\r\n            )}\r\n            <ShareMyRecord />\r\n          </ContentWrapper>\r\n        </PageWrapper>\r\n      </Center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OutroPage;\r\n","export const blackpinkData = [\r\n  {\r\n    id: 'bp001',\r\n    rank: 1,\r\n    trackName: 'Lovesick Girls',\r\n    alterTrackName: '럽식걸즈',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=qt81CWVHgjI',\r\n  },\r\n  {\r\n    id: 'bp002',\r\n    rank: 2,\r\n    trackName: 'How You Like That',\r\n    alterTrackName: '하우유라익댓',\r\n    artistName: 'BLACKPINK',\r\n    album: 'How You Like That',\r\n    url: 'https://www.youtube.com/watch?v=ioNng23DkIM',\r\n  },\r\n  {\r\n    id: 'bp003',\r\n    rank: 3,\r\n    trackName: 'Forever Young',\r\n    alterTrackName: '포에버영',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE UP',\r\n    url: 'https://www.youtube.com/watch?v=7PrxONon7jg',\r\n  },\r\n  {\r\n    id: 'bp004',\r\n    rank: 4,\r\n    trackName: '뚜두뚜두',\r\n    alterTrackName: 'DDU-DU DDU-DU',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE UP',\r\n    url: 'https://www.youtube.com/watch?v=RMc9qFrCqno',\r\n  },\r\n  {\r\n    id: 'bp005',\r\n    rank: 5,\r\n    trackName: '마지막처럼',\r\n    alterTrackName: \"as if it's your last\",\r\n    artistName: 'BLACKPINK',\r\n    album: '마지막처럼',\r\n    url: 'https://www.youtube.com/watch?v=Amq-qlqbjYA',\r\n  },\r\n  {\r\n    id: 'bp006',\r\n    rank: 6,\r\n    trackName: 'Pretty Savage',\r\n    alterTrackName: '프리티새비지',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=F8c8f2nK82w',\r\n  },\r\n  {\r\n    id: 'bp007',\r\n    rank: 7,\r\n    trackName: '불장난',\r\n    alterTrackName: 'playing with fire',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE TWO',\r\n    url: 'https://www.youtube.com/watch?v=PT0mv-4IL4M',\r\n  },\r\n  {\r\n    id: 'bp008',\r\n    rank: 8,\r\n    trackName: 'Kill This Love',\r\n    alterTrackName: '킬디스럽',\r\n    artistName: 'BLACKPINK',\r\n    album: 'KILL THIS LOVE',\r\n    url: 'https://www.youtube.com/watch?v=2S24-y0Ij3Y',\r\n  },\r\n  {\r\n    id: 'bp009',\r\n    rank: 9,\r\n    trackName: '휘파람',\r\n    alterTrackName: 'whistle',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE ONE',\r\n    url: 'https://www.youtube.com/watch?v=cXzOIfcIVAU',\r\n  },\r\n  {\r\n    id: 'bp010',\r\n    rank: 10,\r\n    trackName: \"Don't Know What To Do\",\r\n    alterTrackName: '돈노왓투두',\r\n    artistName: 'BLACKPINK',\r\n    album: 'KILL THIS LOVE',\r\n    url: 'https://www.youtube.com/watch?v=FHn4P9Fyj0M',\r\n  },\r\n  {\r\n    id: 'bp011',\r\n    rank: 11,\r\n    trackName: 'STAY',\r\n    alterTrackName: '스테이',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE TWO',\r\n    url: 'https://www.youtube.com/watch?v=IoiaAA4vNaI',\r\n  },\r\n  {\r\n    id: 'bp012',\r\n    rank: 12,\r\n    trackName: '붐바야',\r\n    alterTrackName: 'boombayah',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE ONE',\r\n    url: 'https://www.youtube.com/watch?v=bwmSjveL3Lc',\r\n  },\r\n  {\r\n    id: 'bp013',\r\n    rank: 13,\r\n    trackName: 'Ice Cream',\r\n    alterTrackName: '아이스크림',\r\n    artistName: 'BLACKPINK',\r\n    album: 'Ice Cream (with Selena Gomez)',\r\n    url: 'https://www.youtube.com/watch?v=32qH09MkPGM',\r\n  },\r\n  {\r\n    id: 'bp014',\r\n    rank: 14,\r\n    trackName: 'Love To Hate Me',\r\n    alterTrackName: '럽투해잇미',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=wlzGXcTzdzU',\r\n  },\r\n  {\r\n    id: 'bp015',\r\n    rank: 15,\r\n    trackName: 'Bet You Wanna',\r\n    alterTrackName: '벳유워너',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=icXHq5sEfCg',\r\n  },\r\n  {\r\n    id: 'bp016',\r\n    rank: 16,\r\n    trackName: 'Crazy Over You',\r\n    alterTrackName: '크레이지오버유',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=u7rKGj13pAs',\r\n  },\r\n  {\r\n    id: 'bp017',\r\n    rank: 17,\r\n    trackName: 'Really',\r\n    alterTrackName: '리얼리',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE UP',\r\n    url: 'https://www.youtube.com/watch?v=He322O1JWgU',\r\n  },\r\n  {\r\n    id: 'bp018',\r\n    rank: 18,\r\n    trackName: 'See U Later',\r\n    alterTrackName: '씨유레이러',\r\n    artistName: 'BLACKPINK',\r\n    album: 'SQUARE UP',\r\n    url: 'https://www.youtube.com/watch?v=fpimnj4SNjQ',\r\n  },\r\n  {\r\n    id: 'bp019',\r\n    rank: 19,\r\n    trackName: 'Kick It',\r\n    alterTrackName: '킥잇',\r\n    artistName: 'BLACKPINK',\r\n    album: 'KILL THIS LOVE',\r\n    url: 'https://www.youtube.com/watch?v=-gZC9hC1PDQ',\r\n  },\r\n  {\r\n    id: 'bp020',\r\n    rank: 20,\r\n    trackName: 'Kiss and Make Up',\r\n    alterTrackName: '키스앤메이크업',\r\n    artistName: 'Dua Lipa, BLACKPINK',\r\n    album: 'Dua Lipa (Complete Edition)',\r\n    url: 'https://www.youtube.com/watch?v=AX3Bsiq-13k',\r\n  },\r\n  {\r\n    id: 'bp021',\r\n    rank: 21,\r\n    trackName: 'You Never Know',\r\n    alterTrackName: '유네버노',\r\n    artistName: 'BLACKPINK',\r\n    album: 'THE ALBUM',\r\n    url: 'https://www.youtube.com/watch?v=4Kk_iaaHd_Y',\r\n  },\r\n  {\r\n    id: 'bp022',\r\n    rank: 22,\r\n    trackName: '아니길',\r\n    alterTrackName: 'Hope Not',\r\n    artistName: 'BLACKPINK',\r\n    album: 'KILL THIS LOVE',\r\n    url: 'https://www.youtube.com/watch?v=l6zMnMMzsss',\r\n  },\r\n  {\r\n    id: 'bp023',\r\n    rank: 23,\r\n    trackName: 'Sour Candy',\r\n    alterTrackName: '사워캔디',\r\n    artistName: 'Lady Gaga, BLACKPINK',\r\n    album: 'Chromatica',\r\n    url: 'https://www.youtube.com/watch?v=fnPn6At3v28',\r\n  },\r\n];\r\n","import React, { useContext } from 'react';\r\n\r\nimport GameLayout from '../GameLayout/GameLayout';\r\nimport OutroPage from '../OutroPage/OutroPage';\r\n\r\nimport { blackpinkData } from '../../data/blackpink';\r\n\r\nimport { GameEndContext } from '../../context/GamEndContext/GameEndContext';\r\n\r\nconst Start = () => {\r\n  // eslint-disable-next-line\r\n  const [isGameEnd, setIsGameEnd] = useContext(GameEndContext);\r\n\r\n  const result = blackpinkData.sort(() => Math.random() - 0.5).slice(0, 10);\r\n\r\n  if (isGameEnd) {\r\n    return <OutroPage />;\r\n  }\r\n\r\n  return <GameLayout trackList={result} />;\r\n};\r\n\r\nexport default Start;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { COLORS, FONT, SIZES } from '../../constants/theme';\r\nimport { GiRank3, GiBalloonDog, GiBarracksTent } from 'react-icons/gi';\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 28px 0 0;\r\n  font-family: ${FONT.korean};\r\n  font-weight: 500;\r\n  color: ${COLORS.textMid};\r\n  font-size: 1.1rem;\r\n  position: relative;\r\n\r\n  .icon {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 3px;\r\n    border-radius: 5px;\r\n    bottom: -15px;\r\n    background: linear-gradient(\r\n      to right,\r\n      ${COLORS.primaryLight} 0%,\r\n      ${COLORS.primaryMiddle} 100%\r\n    );\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease-in-out;\r\n  }\r\n\r\n  :hover {\r\n    color: black;\r\n    transition: color 0.2s ease-in-out;\r\n\r\n    ::before {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1023px) {\r\n    color: ${COLORS.textBlack};\r\n    font-size: 1.3rem;\r\n    margin: 1rem 0;\r\n\r\n    ::before {\r\n      bottom: -10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: flex-end;\r\n  width: 85%;\r\n  max-width: ${SIZES.laptopWidth};\r\n\r\n  @media (max-width: 1023px) {\r\n    height: 100vh;\r\n    width: 250px;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-start;\r\n    z-index: 10;\r\n    list-style: none;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    padding: 3.4rem 0 0 2rem;\r\n    background-color: white;\r\n    border-left: 1px solid #ccc;\r\n\r\n    transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(100%)')};\r\n    transition: transform 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst RightMenu = ({ open }) => {\r\n  return (\r\n    <LinkContainer open={open}>\r\n      <StyledLink to='/'>\r\n        <GiBarracksTent className='icon' />\r\n        첫화면으로\r\n      </StyledLink>\r\n      <StyledLink to='/rank'>\r\n        <GiRank3 className='icon' />\r\n        순위\r\n      </StyledLink>\r\n      <StyledLink to='/about'>\r\n        <GiBalloonDog className='icon' />\r\n        About\r\n      </StyledLink>\r\n    </LinkContainer>\r\n  );\r\n};\r\n\r\nexport default RightMenu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLORS, SCREEN } from '../../constants/theme';\r\nimport RightMenu from './RightMenu';\r\n\r\nconst StyledBurger = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-flow: column nowrap;\r\n  z-index: 11;\r\n\r\n  div {\r\n    width: 30px;\r\n    height: 2px;\r\n    background-color: ${({ open }) =>\r\n      open ? `${COLORS.primaryDark}` : '#ccc'};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: 0.3s linear;\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\r\n    }\r\n    &:nth-child(2) {\r\n      opacity: ${({ open }) => (open ? '0' : '1')};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\r\n    }\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    div {\r\n      background-color: ${({ open }) =>\r\n        open ? `${COLORS.textDark}` : `${COLORS.primaryDark}`};\r\n    }\r\n  }\r\n\r\n  @media ${SCREEN.laptop} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <StyledBurger\r\n        open={open}\r\n        tabIndex='0'\r\n        onClick={(e) => setOpen(!open)}\r\n        onBlur={(e) => setOpen(false)}\r\n      >\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightMenu\r\n        open={open}\r\n        onFocus={() => {\r\n          console.log('hi');\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { COLORS, SCREEN } from '../../constants/theme';\r\n\r\nimport Burger from './Burger';\r\n\r\nconst Nav = styled.div`\r\n  width: 100%;\r\n  height: 55px;\r\n  padding: 0 20px;\r\n  background-color: ${COLORS.primaryDark};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    height: 60px;\r\n    background: white;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Nav>\r\n      <Burger />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport styled from 'styled-components';\r\nimport { COLORS, SIZES, FONT, SCREEN } from '../../../constants/theme';\r\nimport CleanCard from '../../../components/Card/CleanCard';\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  height: ${({ message }) => (message ? '100px' : '1rem')};\r\n  padding: 1.2rem 1rem;\r\n\r\n  margin: 1rem 0;\r\n\r\n  border-radius: ${SIZES.radiusSmall};\r\n  border: 1px solid ${COLORS.primary};\r\n\r\n  font-size: 0.8rem;\r\n  font-family: ${FONT.korean};\r\n  font-weight: 200;\r\n  color: ${COLORS.textDark};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media ${SCREEN.tablet} {\r\n    margin: ${({ userInfo }) => (userInfo ? '0 1rem 0 0' : '1.3rem 0 0 0')};\r\n    margin: ${({ userMail }) => userMail && '0 0 0 0'};\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.7rem;\r\n  position: absolute;\r\n  left: 15px;\r\n  top: 13px;\r\n  background-color: white;\r\n  padding: 0 7px;\r\n\r\n  color: ${COLORS.primary};\r\n  font-family: ${FONT.english};\r\n  text-transform: uppercase;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    top: ${({ firstRow }) => (firstRow ? '-8px' : '18px')};\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.input`\r\n  width: 100%;\r\n  height: 50px;\r\n  border: none;\r\n  border-radius: ${SIZES.radiusSmall};\r\n  margin-top: 1rem;\r\n\r\n  font-size: 0.7rem;\r\n  background: linear-gradient(20deg, #fff3d6 0%, ${COLORS.secondaryDark} 100%);\r\n  color: ${COLORS.primaryDark};\r\n  letter-spacing: 1px;\r\n  font-weight: 600;\r\n  font-family: ${FONT.english};\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  @media ${SCREEN.tablet} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default function ContactUs() {\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        'service_c1z45yd',\r\n        'template_evmlcwg',\r\n        e.target,\r\n        'user_FtiFaXbSTwnhWDRNVMUXG'\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <CleanCard mail>\r\n      <Form className='contact-form' onSubmit={sendEmail}>\r\n        <input type='hidden' name='contact_number' />\r\n        <Row>\r\n          <Container>\r\n            <Label firstRow>Name</Label>\r\n            <Input type='text' name='name' userInfo require />\r\n          </Container>\r\n          <Container>\r\n            <Label firstRow>Email</Label>\r\n            <Input type='email' name='email' userMail require />\r\n          </Container>\r\n        </Row>\r\n        <Container>\r\n          <Label>subject</Label>\r\n          <Input type='text' name='subject' />\r\n        </Container>\r\n        <Container>\r\n          <Label>Message</Label>\r\n          <Input as='textarea' name='message' message require />\r\n        </Container>\r\n        <SubmitButton type='submit' value='Send Message' />\r\n      </Form>\r\n    </CleanCard>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Center from '../../components/Center/Center';\r\nimport { FaGithubAlt } from 'react-icons/fa';\r\nimport { COLORS, SIZES } from '../../constants/theme';\r\nimport GameTitle from '../../components/GameTitle/GameTitle';\r\nimport EmailForm from './EmailForm/EmailForm';\r\n\r\nconst Content = styled.div`\r\n  width: 90%;\r\n  max-width: ${SIZES.gameLayoutWidth};\r\n  color: black;\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 1.8rem;\r\n  margin-bottom: ${({ bottom }) => (bottom ? '2rem' : '')};\r\n\r\n  a {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    margin-top: 1rem;\r\n    color: ${COLORS.primary};\r\n\r\n    :focus,\r\n    :visited {\r\n      color: ${COLORS.primary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Center>\r\n      <GameTitle about>mocha</GameTitle>\r\n      <Content bottom>\r\n        <p>안녕하세요! 재밋게 즐기셨나요? 😙</p>\r\n        <p>문의사항이나 건의사항이 있다면 아래의 메일로 보내주세요.</p>\r\n        <Content>\r\n          <p>해당 프로젝트는 취업 용 포트폴리오입니다.</p>\r\n          <p>만약 제 포트폴리오가 마음에 드셨다면, 연락 바랍니다!</p>\r\n        </Content>\r\n        <a\r\n          href='https://github.com/mochapoke/kpop-master/'\r\n          title='깃허브 페이지로 이동'\r\n        >\r\n          <FaGithubAlt size='1.5rem' />\r\n        </a>\r\n      </Content>\r\n      <EmailForm />\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport CleanCard from '../../../../components/Card/CleanCard';\r\nimport RankersTable from '../../../OutroPage/Section/RankersTable/RankersTable';\r\n\r\nconst RankingTable = ({ userRecords }) => {\r\n  return (\r\n    <CleanCard rank>\r\n      <RankersTable userRecords={userRecords} quantityToShow={10} />\r\n    </CleanCard>\r\n  );\r\n};\r\n\r\nexport default RankingTable;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport GameTitle from '../../components/GameTitle/GameTitle';\r\nimport Center from '../../components/Center/Center';\r\nimport Spinner from '../OutroPage/Section/Spinner/Spinner';\r\nimport RankingTable from './Section/RankingTable/RankingTable';\r\n\r\nconst RankPage = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userRankList, setUserRankList] = useState();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    axios.get('/api/user/getRecords').then((res) => {\r\n      if (res.data.success) {\r\n        setUserRankList(res.data.userRecordList);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Center>\r\n      <GameTitle about>Rank</GameTitle>\r\n      {isLoading ? <Spinner /> : <RankingTable userRecords={userRankList} />}\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default RankPage;\r\n","import './App.css';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport LandingPage from './pages/LandingPage/LandingPage';\r\nimport Start from './pages/Start/Start';\r\nimport NavBar from './pages/NavBar/NavBar';\r\nimport About from './pages/About/About';\r\nimport RankPage from './pages/RankPage/RankPage';\r\n\r\nimport { GameResultProvider } from './context/GameResultContext/GameResultContext';\r\nimport { GameEndProvider } from './context/GamEndContext/GameEndContext';\r\n\r\nfunction App() {\r\n  return (\r\n    <GameEndProvider>\r\n      <GameResultProvider>\r\n        <BrowserRouter>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route exact path='/start' component={Start} />\r\n            <Route exact path='/about' component={About} />\r\n            <Route exact path='/rank' component={RankPage} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </GameResultProvider>\r\n    </GameEndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}